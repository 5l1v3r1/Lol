_common: !include "./common.yaml"

name: lol
version: 0.7.0.0
synopsis: A library for lattice cryptography.
extra-source-files:
  - README
  - CHANGES.md
  - Lol.proto
  - RLWE.proto
description: >
  Λ ⚬ λ (Lol) is a general-purpose library for ring-based lattice
  cryptography.  For a detailed description of interfaces and
  functionality, see <https://eprint.iacr.org/2015/1134 Λ ⚬ λ:
  Functional Lattice Cryptography>. The main backend for the library
  is <https://hackage.haskell.org/package/lol-cpp lol-cpp>
  (<https://hackage.haskell.org/package/lol-repa lol-repa> is
  currently out of date). For example cryptographic applications, see
  <https://hackage.haskell.org/package/lol-apps lol-apps>.

<<: *commonPrelude

flags:
  <<: *commonFlags

library:
  when: 
    <<: *commonLLVMFlag
  dependencies: 
    - ansi-terminal
    - arithmoi
    - base
    - bytestring
    - constraints
    - containers
    - criterion
    - criterion-measurement
    - crypto-api
    - data-default
    - deepseq
    - directory
    - monadcryptorandom
    - MonadRandom
    - mtl
    - numeric-prelude
    - protocol-buffers
    - protocol-buffers-descriptor
    - random
    - reflection
    - singletons
    - statistics
    - tagged-transformer
    - template-haskell
    - test-framework
    - test-framework-quickcheck2
    - vector
    - vector-th-unbox
    - QuickCheck
  
  exposed-modules:
    - Crypto.Lol
    - Crypto.Lol.Types
    - Crypto.Lol.Factored
    - Crypto.Lol.Reflects
    - Crypto.Lol.CRTrans
    - Crypto.Lol.Gadget
    - Crypto.Lol.Prelude

    - Crypto.Lol.Cyclotomic.Cyc
    - Crypto.Lol.Cyclotomic.CycRep
    - Crypto.Lol.Cyclotomic.Language
    - Crypto.Lol.Cyclotomic.Linear

    - Crypto.Lol.RLWE.Continuous
    - Crypto.Lol.RLWE.Discrete
    - Crypto.Lol.RLWE.RLWR

    - Crypto.Lol.Cyclotomic.Tensor
    - Crypto.Lol.GaussRandom
    - Crypto.Lol.Types.Unsafe.Complex
    - Crypto.Lol.Types.FiniteField
    - Crypto.Lol.Types.IrreducibleChar2
    - Crypto.Lol.Types.IFunctor
    - Crypto.Lol.Types.IZipVector
    - Crypto.Lol.Types.Proto
    - Crypto.Lol.Types.Random
    - Crypto.Lol.Types.Unsafe.RRq
    - Crypto.Lol.Types.ZmStar
    - Crypto.Lol.Types.Unsafe.ZqBasic

    - Crypto.Proto.Lol
    - Crypto.Proto.Lol.LinearRq
    - Crypto.Proto.Lol.R
    - Crypto.Proto.Lol.Rq
    - Crypto.Proto.Lol.RqProduct
    - Crypto.Proto.Lol.K
    - Crypto.Proto.Lol.Kq
    - Crypto.Proto.Lol.KqProduct
    - Crypto.Proto.Lol.TypeRep
    - Crypto.Proto.RLWE
    - Crypto.Proto.RLWE.SampleContProduct
    - Crypto.Proto.RLWE.SampleDiscProduct
    - Crypto.Proto.RLWE.SampleRLWRProduct
    - Crypto.Proto.RLWE.SampleCont
    - Crypto.Proto.RLWE.SampleDisc
    - Crypto.Proto.RLWE.SampleRLWR

    - Crypto.Lol.Utils.ShowType

    - Crypto.Lol.Tests
    - Crypto.Lol.Benchmarks

  other-modules:
    - Crypto.Lol.Cyclotomic.CRTSentinel
    - Crypto.Lol.FactoredDefs
    - Crypto.Lol.Types.Numeric
    - Crypto.Lol.PosBin
    - Crypto.Lol.PosBinDefs

    - Crypto.Lol.Utils.Tests
    - Crypto.Lol.Utils.Benchmarks
    - Crypto.Lol.Utils.PrettyPrint
    - Crypto.Lol.Utils.PrettyPrint.Diagnostic
    - Crypto.Lol.Utils.PrettyPrint.Table

    - Crypto.Lol.Tests.CycTests
    - Crypto.Lol.Tests.Default
    - Crypto.Lol.Tests.TensorTests
    - Crypto.Lol.Tests.ZqTests

    - Crypto.Lol.Benchmarks.CycBenches
    - Crypto.Lol.Benchmarks.Default
    - Crypto.Lol.Benchmarks.TensorBenches
    - Crypto.Lol.Benchmarks.CycRepBenches

tests:
  test-lol:
    main: LolTestsMain.hs
    ghc-options: -main-is LolTestsMain
    source-dirs: tests
    dependencies:
      - base
      - lol
      - test-framework
